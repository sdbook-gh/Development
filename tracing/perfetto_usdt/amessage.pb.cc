// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amessage.proto
// Protobuf C++ Version: 5.26.1

#include "amessage.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace test {
namespace protobuf {
namespace cpp {

inline constexpr Submessage2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Submessage2::Submessage2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Submessage2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Submessage2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Submessage2DefaultTypeInternal() {}
  union {
    Submessage2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Submessage2DefaultTypeInternal _Submessage2_default_instance_;

inline constexpr Submessage1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Submessage1::Submessage1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Submessage1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Submessage1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Submessage1DefaultTypeInternal() {}
  union {
    Submessage1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Submessage1DefaultTypeInternal _Submessage1_default_instance_;

inline constexpr PointField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        time_{0u},
        intensity_{0u},
        distance_{0},
        pitch_{0},
        yaw_{0},
        ring_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PointField::PointField(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PointFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointFieldDefaultTypeInternal() {}
  union {
    PointField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointFieldDefaultTypeInternal _PointField_default_instance_;

inline constexpr PointCloud::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        points_{},
        height_{0u},
        width_{0u},
        point_step_{0u},
        row_step_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PointCloud::PointCloud(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PointCloudDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointCloudDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointCloudDefaultTypeInternal() {}
  union {
    PointCloud _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointCloudDefaultTypeInternal _PointCloud_default_instance_;

inline constexpr AMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        c_{},
        _c_cached_byte_size_{0},
        d_{},
        g_{},
        e_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_{nullptr},
        a_{0},
        b_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AMessage::AMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AMessageDefaultTypeInternal() {}
  union {
    AMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AMessageDefaultTypeInternal _AMessage_default_instance_;
}  // namespace cpp
}  // namespace protobuf
}  // namespace test
static ::_pb::Metadata file_level_metadata_amessage_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_amessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_amessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_amessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::Submessage1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::Submessage1, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::Submessage2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::Submessage2, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.b_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.c_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.d_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.e_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.f_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::AMessage, _impl_.g_),
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.distance_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.yaw_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.intensity_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointField, _impl_.ring_),
        3,
        0,
        1,
        2,
        5,
        6,
        7,
        4,
        8,
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_.point_step_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_.row_step_),
        PROTOBUF_FIELD_OFFSET(::test::protobuf::cpp::PointCloud, _impl_.points_),
        0,
        1,
        2,
        3,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::test::protobuf::cpp::Submessage1)},
        {9, -1, -1, sizeof(::test::protobuf::cpp::Submessage2)},
        {18, 33, -1, sizeof(::test::protobuf::cpp::AMessage)},
        {40, 57, -1, sizeof(::test::protobuf::cpp::PointField)},
        {66, 79, -1, sizeof(::test::protobuf::cpp::PointCloud)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::test::protobuf::cpp::_Submessage1_default_instance_._instance,
    &::test::protobuf::cpp::_Submessage2_default_instance_._instance,
    &::test::protobuf::cpp::_AMessage_default_instance_._instance,
    &::test::protobuf::cpp::_PointField_default_instance_._instance,
    &::test::protobuf::cpp::_PointCloud_default_instance_._instance,
};
const char descriptor_table_protodef_amessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016amessage.proto\022\021test.protobuf.cpp\"\034\n\013S"
    "ubmessage1\022\r\n\005value\030\001 \001(\005\"\034\n\013Submessage2"
    "\022\r\n\005value\030\001 \001(\005\"\255\001\n\010AMessage\022\t\n\001a\030\001 \001(\005\022"
    "\016\n\001b\030\002 \001(\005H\000\210\001\001\022\t\n\001c\030\003 \003(\005\022\t\n\001d\030\004 \003(\t\022\t\n"
    "\001e\030\005 \001(\014\022.\n\001f\030\006 \001(\0132\036.test.protobuf.cpp."
    "Submessage1H\001\210\001\001\022)\n\001g\030\007 \003(\0132\036.test.proto"
    "buf.cpp.Submessage2B\004\n\002_bB\004\n\002_f\"\210\002\n\nPoin"
    "tField\022\021\n\004time\030\001 \001(\rH\000\210\001\001\022\016\n\001x\030\002 \001(\001H\001\210\001"
    "\001\022\016\n\001y\030\003 \001(\001H\002\210\001\001\022\016\n\001z\030\004 \001(\001H\003\210\001\001\022\025\n\010dis"
    "tance\030\005 \001(\001H\004\210\001\001\022\022\n\005pitch\030\006 \001(\001H\005\210\001\001\022\020\n\003"
    "yaw\030\007 \001(\001H\006\210\001\001\022\026\n\tintensity\030\010 \001(\rH\007\210\001\001\022\021"
    "\n\004ring\030\t \001(\rH\010\210\001\001B\007\n\005_timeB\004\n\002_xB\004\n\002_yB\004"
    "\n\002_zB\013\n\t_distanceB\010\n\006_pitchB\006\n\004_yawB\014\n\n_"
    "intensityB\007\n\005_ring\"\305\001\n\nPointCloud\022\023\n\006hei"
    "ght\030\001 \001(\rH\000\210\001\001\022\022\n\005width\030\002 \001(\rH\001\210\001\001\022\027\n\npo"
    "int_step\030\003 \001(\rH\002\210\001\001\022\025\n\010row_step\030\004 \001(\rH\003\210"
    "\001\001\022-\n\006points\030\005 \003(\0132\035.test.protobuf.cpp.P"
    "ointFieldB\t\n\007_heightB\010\n\006_widthB\r\n\013_point"
    "_stepB\013\n\t_row_stepb\006proto3"
};
static ::absl::once_flag descriptor_table_amessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_amessage_2eproto = {
    false,
    false,
    746,
    descriptor_table_protodef_amessage_2eproto,
    "amessage.proto",
    &descriptor_table_amessage_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_amessage_2eproto::offsets,
    file_level_metadata_amessage_2eproto,
    file_level_enum_descriptors_amessage_2eproto,
    file_level_service_descriptors_amessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_amessage_2eproto_getter() {
  return &descriptor_table_amessage_2eproto;
}
namespace test {
namespace protobuf {
namespace cpp {
// ===================================================================

class Submessage1::_Internal {
 public:
};

Submessage1::Submessage1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.protobuf.cpp.Submessage1)
}
Submessage1::Submessage1(
    ::google::protobuf::Arena* arena, const Submessage1& from)
    : Submessage1(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Submessage1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Submessage1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Submessage1::~Submessage1() {
  // @@protoc_insertion_point(destructor:test.protobuf.cpp.Submessage1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Submessage1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Submessage1::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Submessage1, _impl_._cached_size_),
              false,
          },
          &Submessage1::MergeImpl,
          &Submessage1::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Submessage1::Clear() {
// @@protoc_insertion_point(message_clear_start:test.protobuf.cpp.Submessage1)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Submessage1::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Submessage1::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Submessage1_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::protobuf::cpp::Submessage1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Submessage1, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Submessage1, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(Submessage1, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Submessage1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.protobuf.cpp.Submessage1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.protobuf.cpp.Submessage1)
  return target;
}

::size_t Submessage1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.protobuf.cpp.Submessage1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Submessage1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Submessage1*>(&to_msg);
  auto& from = static_cast<const Submessage1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.protobuf.cpp.Submessage1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Submessage1::CopyFrom(const Submessage1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.protobuf.cpp.Submessage1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Submessage1::IsInitialized() const {
  return true;
}

void Submessage1::InternalSwap(Submessage1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Submessage1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_amessage_2eproto_getter,
                                   &descriptor_table_amessage_2eproto_once,
                                   file_level_metadata_amessage_2eproto[0]);
}
// ===================================================================

class Submessage2::_Internal {
 public:
};

Submessage2::Submessage2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.protobuf.cpp.Submessage2)
}
Submessage2::Submessage2(
    ::google::protobuf::Arena* arena, const Submessage2& from)
    : Submessage2(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Submessage2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Submessage2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Submessage2::~Submessage2() {
  // @@protoc_insertion_point(destructor:test.protobuf.cpp.Submessage2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Submessage2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Submessage2::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Submessage2, _impl_._cached_size_),
              false,
          },
          &Submessage2::MergeImpl,
          &Submessage2::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Submessage2::Clear() {
// @@protoc_insertion_point(message_clear_start:test.protobuf.cpp.Submessage2)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Submessage2::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Submessage2::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Submessage2_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::protobuf::cpp::Submessage2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Submessage2, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Submessage2, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(Submessage2, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Submessage2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.protobuf.cpp.Submessage2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.protobuf.cpp.Submessage2)
  return target;
}

::size_t Submessage2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.protobuf.cpp.Submessage2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Submessage2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Submessage2*>(&to_msg);
  auto& from = static_cast<const Submessage2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.protobuf.cpp.Submessage2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Submessage2::CopyFrom(const Submessage2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.protobuf.cpp.Submessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Submessage2::IsInitialized() const {
  return true;
}

void Submessage2::InternalSwap(Submessage2* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Submessage2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_amessage_2eproto_getter,
                                   &descriptor_table_amessage_2eproto_once,
                                   file_level_metadata_amessage_2eproto[1]);
}
// ===================================================================

class AMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<AMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AMessage, _impl_._has_bits_);
};

AMessage::AMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.protobuf.cpp.AMessage)
}
inline PROTOBUF_NDEBUG_INLINE AMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        c_{visibility, arena, from.c_},
        _c_cached_byte_size_{0},
        d_{visibility, arena, from.d_},
        g_{visibility, arena, from.g_},
        e_(arena, from.e_) {}

AMessage::AMessage(
    ::google::protobuf::Arena* arena,
    const AMessage& from)
    : ::google::protobuf::Message(arena) {
  AMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::test::protobuf::cpp::Submessage1>(
                              arena, *from._impl_.f_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, a_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, a_),
           offsetof(Impl_, b_) -
               offsetof(Impl_, a_) +
               sizeof(Impl_::b_));

  // @@protoc_insertion_point(copy_constructor:test.protobuf.cpp.AMessage)
}
inline PROTOBUF_NDEBUG_INLINE AMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        c_{visibility, arena},
        _c_cached_byte_size_{0},
        d_{visibility, arena},
        g_{visibility, arena},
        e_(arena) {}

inline void AMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, f_) +
               sizeof(Impl_::b_));
}
AMessage::~AMessage() {
  // @@protoc_insertion_point(destructor:test.protobuf.cpp.AMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.e_.Destroy();
  delete _impl_.f_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AMessage, _impl_._cached_size_),
              false,
          },
          &AMessage::MergeImpl,
          &AMessage::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test.protobuf.cpp.AMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_.Clear();
  _impl_.d_.Clear();
  _impl_.g_.Clear();
  _impl_.e_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_ != nullptr);
    _impl_.f_->Clear();
  }
  _impl_.a_ = 0;
  _impl_.b_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 36, 2> AMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AMessage, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::protobuf::cpp::AMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 a = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AMessage, _impl_.a_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.a_)}},
    // optional int32 b = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AMessage, _impl_.b_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.b_)}},
    // repeated int32 c = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.c_)}},
    // repeated string d = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.d_)}},
    // bytes e = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.e_)}},
    // optional .test.protobuf.cpp.Submessage1 f = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.f_)}},
    // repeated .test.protobuf.cpp.Submessage2 g = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(AMessage, _impl_.g_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 a = 1;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.a_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional int32 b = 2;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.b_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 c = 3;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.c_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string d = 4;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.d_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes e = 5;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.e_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .test.protobuf.cpp.Submessage1 f = 6;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.f_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .test.protobuf.cpp.Submessage2 g = 7;
    {PROTOBUF_FIELD_OFFSET(AMessage, _impl_.g_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::test::protobuf::cpp::Submessage1>()},
    {::_pbi::TcParser::GetTable<::test::protobuf::cpp::Submessage2>()},
  }}, {{
    "\32\0\0\0\1\0\0\0"
    "test.protobuf.cpp.AMessage"
    "d"
  }},
};

::uint8_t* AMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.protobuf.cpp.AMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 a = 1;
  if (this->_internal_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_a(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_b(), target);
  }

  // repeated int32 c = 3;
  {
    int byte_size = _impl_._c_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_c(), byte_size, target);
    }
  }

  // repeated string d = 4;
  for (int i = 0, n = this->_internal_d_size(); i < n; ++i) {
    const auto& s = this->_internal_d().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.protobuf.cpp.AMessage.d");
    target = stream->WriteString(4, s, target);
  }

  // bytes e = 5;
  if (!this->_internal_e().empty()) {
    const std::string& _s = this->_internal_e();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // optional .test.protobuf.cpp.Submessage1 f = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.f_, _impl_.f_->GetCachedSize(), target, stream);
  }

  // repeated .test.protobuf.cpp.Submessage2 g = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_g_size());
       i < n; i++) {
    const auto& repfield = this->_internal_g().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.protobuf.cpp.AMessage)
  return target;
}

::size_t AMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.protobuf.cpp.AMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 c = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_c())
    ;
    _impl_._c_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string d = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_d().size());
  for (int i = 0, n = _internal_d().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_d().Get(i));
  }
  // repeated .test.protobuf.cpp.Submessage2 g = 7;
  total_size += 1UL * this->_internal_g_size();
  for (const auto& msg : this->_internal_g()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes e = 5;
  if (!this->_internal_e().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_e());
  }

  // optional .test.protobuf.cpp.Submessage1 f = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_);
  }

  // int32 a = 1;
  if (this->_internal_a() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_a());
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_b());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AMessage*>(&to_msg);
  auto& from = static_cast<const AMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:test.protobuf.cpp.AMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_c()->MergeFrom(from._internal_c());
  _this->_internal_mutable_d()->MergeFrom(from._internal_d());
  _this->_internal_mutable_g()->MergeFrom(
      from._internal_g());
  if (!from._internal_e().empty()) {
    _this->_internal_set_e(from._internal_e());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.f_ != nullptr);
    if (_this->_impl_.f_ == nullptr) {
      _this->_impl_.f_ =
          ::google::protobuf::Message::CopyConstruct<::test::protobuf::cpp::Submessage1>(arena, *from._impl_.f_);
    } else {
      _this->_impl_.f_->MergeFrom(*from._impl_.f_);
    }
  }
  if (from._internal_a() != 0) {
    _this->_impl_.a_ = from._impl_.a_;
  }
  if (cached_has_bits & 0x00000002u) {
    _this->_impl_.b_ = from._impl_.b_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AMessage::CopyFrom(const AMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.protobuf.cpp.AMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AMessage::IsInitialized() const {
  return true;
}

void AMessage::InternalSwap(AMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.c_.InternalSwap(&other->_impl_.c_);
  _impl_.d_.InternalSwap(&other->_impl_.d_);
  _impl_.g_.InternalSwap(&other->_impl_.g_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.e_, &other->_impl_.e_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AMessage, _impl_.b_)
      + sizeof(AMessage::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(AMessage, _impl_.f_)>(
          reinterpret_cast<char*>(&_impl_.f_),
          reinterpret_cast<char*>(&other->_impl_.f_));
}

::google::protobuf::Metadata AMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_amessage_2eproto_getter,
                                   &descriptor_table_amessage_2eproto_once,
                                   file_level_metadata_amessage_2eproto[2]);
}
// ===================================================================

class PointField::_Internal {
 public:
  using HasBits = decltype(std::declval<PointField>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PointField, _impl_._has_bits_);
};

PointField::PointField(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.protobuf.cpp.PointField)
}
PointField::PointField(
    ::google::protobuf::Arena* arena, const PointField& from)
    : PointField(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PointField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PointField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, ring_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::ring_));
}
PointField::~PointField() {
  // @@protoc_insertion_point(destructor:test.protobuf.cpp.PointField)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PointField::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PointField::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PointField, _impl_._cached_size_),
              false,
          },
          &PointField::MergeImpl,
          &PointField::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PointField::Clear() {
// @@protoc_insertion_point(message_clear_start:test.protobuf.cpp.PointField)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.yaw_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.yaw_));
  }
  _impl_.ring_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PointField::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> PointField::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PointField, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PointField_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::protobuf::cpp::PointField>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointField, _impl_.time_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.time_)}},
    // optional double x = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.x_)}},
    // optional double y = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.y_)}},
    // optional double z = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.z_)}},
    // optional double distance = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.distance_)}},
    // optional double pitch = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 6, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.pitch_)}},
    // optional double yaw = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 7, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.yaw_)}},
    // optional uint32 intensity = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointField, _impl_.intensity_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.intensity_)}},
    // optional uint32 ring = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointField, _impl_.ring_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(PointField, _impl_.ring_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 time = 1;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.time_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional double x = 2;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 3;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double z = 4;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double distance = 5;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.distance_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double pitch = 6;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.pitch_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double yaw = 7;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.yaw_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional uint32 intensity = 8;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.intensity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ring = 9;
    {PROTOBUF_FIELD_OFFSET(PointField, _impl_.ring_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PointField::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.protobuf.cpp.PointField)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 time = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_time(), target);
  }

  // optional double x = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_x(), target);
  }

  // optional double y = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_y(), target);
  }

  // optional double z = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_z(), target);
  }

  // optional double distance = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_distance(), target);
  }

  // optional double pitch = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_pitch(), target);
  }

  // optional double yaw = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_yaw(), target);
  }

  // optional uint32 intensity = 8;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_intensity(), target);
  }

  // optional uint32 ring = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_ring(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.protobuf.cpp.PointField)
  return target;
}

::size_t PointField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.protobuf.cpp.PointField)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional double x = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional double y = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

    // optional double z = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional uint32 time = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_time());
    }

    // optional uint32 intensity = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_intensity());
    }

    // optional double distance = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }

    // optional double pitch = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 9;
    }

    // optional double yaw = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }

  }
  // optional uint32 ring = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ring());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PointField::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PointField*>(&to_msg);
  auto& from = static_cast<const PointField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.protobuf.cpp.PointField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.intensity_ = from._impl_.intensity_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.distance_ = from._impl_.distance_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.pitch_ = from._impl_.pitch_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.yaw_ = from._impl_.yaw_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.ring_ = from._impl_.ring_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PointField::CopyFrom(const PointField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.protobuf.cpp.PointField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PointField::IsInitialized() const {
  return true;
}

void PointField::InternalSwap(PointField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointField, _impl_.ring_)
      + sizeof(PointField::_impl_.ring_)
      - PROTOBUF_FIELD_OFFSET(PointField, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata PointField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_amessage_2eproto_getter,
                                   &descriptor_table_amessage_2eproto_once,
                                   file_level_metadata_amessage_2eproto[3]);
}
// ===================================================================

class PointCloud::_Internal {
 public:
  using HasBits = decltype(std::declval<PointCloud>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PointCloud, _impl_._has_bits_);
};

PointCloud::PointCloud(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.protobuf.cpp.PointCloud)
}
inline PROTOBUF_NDEBUG_INLINE PointCloud::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        points_{visibility, arena, from.points_} {}

PointCloud::PointCloud(
    ::google::protobuf::Arena* arena,
    const PointCloud& from)
    : ::google::protobuf::Message(arena) {
  PointCloud* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, row_step_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::row_step_));

  // @@protoc_insertion_point(copy_constructor:test.protobuf.cpp.PointCloud)
}
inline PROTOBUF_NDEBUG_INLINE PointCloud::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        points_{visibility, arena} {}

inline void PointCloud::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, row_step_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::row_step_));
}
PointCloud::~PointCloud() {
  // @@protoc_insertion_point(destructor:test.protobuf.cpp.PointCloud)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PointCloud::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PointCloud::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PointCloud, _impl_._cached_size_),
              false,
          },
          &PointCloud::MergeImpl,
          &PointCloud::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PointCloud::Clear() {
// @@protoc_insertion_point(message_clear_start:test.protobuf.cpp.PointCloud)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.row_step_) -
        reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.row_step_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PointCloud::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> PointCloud::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PointCloud, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PointCloud_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::protobuf::cpp::PointCloud>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointCloud, _impl_.height_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.height_)}},
    // optional uint32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointCloud, _impl_.width_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.width_)}},
    // optional uint32 point_step = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointCloud, _impl_.point_step_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.point_step_)}},
    // optional uint32 row_step = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PointCloud, _impl_.row_step_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.row_step_)}},
    // repeated .test.protobuf.cpp.PointField points = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.points_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 height = 1;
    {PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 width = 2;
    {PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.width_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 point_step = 3;
    {PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.point_step_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 row_step = 4;
    {PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.row_step_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .test.protobuf.cpp.PointField points = 5;
    {PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.points_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::test::protobuf::cpp::PointField>()},
  }}, {{
  }},
};

::uint8_t* PointCloud::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.protobuf.cpp.PointCloud)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 height = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_height(), target);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_width(), target);
  }

  // optional uint32 point_step = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_point_step(), target);
  }

  // optional uint32 row_step = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_row_step(), target);
  }

  // repeated .test.protobuf.cpp.PointField points = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_points_size());
       i < n; i++) {
    const auto& repfield = this->_internal_points().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.protobuf.cpp.PointCloud)
  return target;
}

::size_t PointCloud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.protobuf.cpp.PointCloud)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .test.protobuf.cpp.PointField points = 5;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->_internal_points()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 height = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_height());
    }

    // optional uint32 width = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_width());
    }

    // optional uint32 point_step = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_point_step());
    }

    // optional uint32 row_step = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_row_step());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PointCloud::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PointCloud*>(&to_msg);
  auto& from = static_cast<const PointCloud&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.protobuf.cpp.PointCloud)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.point_step_ = from._impl_.point_step_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.row_step_ = from._impl_.row_step_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PointCloud::CopyFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.protobuf.cpp.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PointCloud::IsInitialized() const {
  return true;
}

void PointCloud::InternalSwap(PointCloud* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.row_step_)
      + sizeof(PointCloud::_impl_.row_step_)
      - PROTOBUF_FIELD_OFFSET(PointCloud, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata PointCloud::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_amessage_2eproto_getter,
                                   &descriptor_table_amessage_2eproto_once,
                                   file_level_metadata_amessage_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cpp
}  // namespace protobuf
}  // namespace test
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_amessage_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
