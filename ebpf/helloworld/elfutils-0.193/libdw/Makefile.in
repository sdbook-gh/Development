# Makefile.in generated by automake 1.17 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2024 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
am__rm_f = rm -f $(am__rm_f_notfound)
am__rm_rf = rm -rf $(am__rm_f_notfound)
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@SYMBOL_VERSIONING_TRUE@am__append_1 = -DSYMBOL_VERSIONING
@BUILD_STATIC_TRUE@am__append_2 = $(fpic_CFLAGS)
check_PROGRAMS = dwarf_srclang_check$(EXEEXT)
subdir = libdw
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/biarch.m4 $(top_srcdir)/m4/build-to-host.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/host-cpu-c-abi.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/zip.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(noinst_HEADERS) $(pkginclude_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
  || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
       $(am__cd) "$$dir" && echo $$files | $(am__xargs_n) 40 $(am__rm_f); }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)"
LIBRARIES = $(lib_LIBRARIES) $(noinst_LIBRARIES)
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libdw_a_AR = $(AR) $(ARFLAGS)
libdw_a_RANLIB = $(RANLIB)
libdw_a_DEPENDENCIES = $(addprefix ../libdwfl/,$(libdwfl_objects)) \
	$(addprefix \
	../libdwfl_stacktrace/,$(libdwfl_stacktrace_objects)) \
	$(addprefix ../libdwelf/,$(libdwelf_objects)) $(addprefix \
	../libebl/,$(libebl_objects)) $(addprefix \
	../backends/,$(backends_objects)) $(addprefix \
	../libcpu/,$(libcpu_objects))
am_libdw_a_OBJECTS = dwarf_begin.$(OBJEXT) dwarf_begin_elf.$(OBJEXT) \
	dwarf_end.$(OBJEXT) dwarf_getelf.$(OBJEXT) \
	dwarf_getpubnames.$(OBJEXT) dwarf_getabbrev.$(OBJEXT) \
	dwarf_tag.$(OBJEXT) dwarf_error.$(OBJEXT) \
	dwarf_nextcu.$(OBJEXT) dwarf_diename.$(OBJEXT) \
	dwarf_offdie.$(OBJEXT) dwarf_attr.$(OBJEXT) \
	dwarf_formstring.$(OBJEXT) dwarf_abbrev_hash.$(OBJEXT) \
	dwarf_sig8_hash.$(OBJEXT) dwarf_attr_integrate.$(OBJEXT) \
	dwarf_hasattr_integrate.$(OBJEXT) dwarf_child.$(OBJEXT) \
	dwarf_haschildren.$(OBJEXT) dwarf_formaddr.$(OBJEXT) \
	dwarf_formudata.$(OBJEXT) dwarf_formsdata.$(OBJEXT) \
	dwarf_lowpc.$(OBJEXT) dwarf_entrypc.$(OBJEXT) \
	dwarf_haspc.$(OBJEXT) dwarf_highpc.$(OBJEXT) \
	dwarf_ranges.$(OBJEXT) dwarf_formref.$(OBJEXT) \
	dwarf_formref_die.$(OBJEXT) dwarf_siblingof.$(OBJEXT) \
	dwarf_dieoffset.$(OBJEXT) dwarf_cuoffset.$(OBJEXT) \
	dwarf_diecu.$(OBJEXT) dwarf_hasattr.$(OBJEXT) \
	dwarf_hasform.$(OBJEXT) dwarf_whatform.$(OBJEXT) \
	dwarf_whatattr.$(OBJEXT) dwarf_bytesize.$(OBJEXT) \
	dwarf_arrayorder.$(OBJEXT) dwarf_bitsize.$(OBJEXT) \
	dwarf_bitoffset.$(OBJEXT) dwarf_srclang.$(OBJEXT) \
	dwarf_getabbrevtag.$(OBJEXT) dwarf_getabbrevcode.$(OBJEXT) \
	dwarf_abbrevhaschildren.$(OBJEXT) dwarf_getattrcnt.$(OBJEXT) \
	dwarf_getabbrevattr.$(OBJEXT) dwarf_getsrclines.$(OBJEXT) \
	dwarf_getsrc_die.$(OBJEXT) dwarf_getscopes.$(OBJEXT) \
	dwarf_getscopes_die.$(OBJEXT) dwarf_getscopevar.$(OBJEXT) \
	dwarf_linesrc.$(OBJEXT) dwarf_lineno.$(OBJEXT) \
	dwarf_lineaddr.$(OBJEXT) dwarf_linecol.$(OBJEXT) \
	dwarf_linebeginstatement.$(OBJEXT) \
	dwarf_lineendsequence.$(OBJEXT) dwarf_lineblock.$(OBJEXT) \
	dwarf_linecontext.$(OBJEXT) dwarf_linefunctionname.$(OBJEXT) \
	dwarf_lineprologueend.$(OBJEXT) \
	dwarf_lineepiloguebegin.$(OBJEXT) dwarf_lineisa.$(OBJEXT) \
	dwarf_linediscriminator.$(OBJEXT) dwarf_lineop_index.$(OBJEXT) \
	dwarf_line_file.$(OBJEXT) dwarf_onesrcline.$(OBJEXT) \
	dwarf_formblock.$(OBJEXT) dwarf_getsrcfiles.$(OBJEXT) \
	dwarf_filesrc.$(OBJEXT) dwarf_getsrcdirs.$(OBJEXT) \
	dwarf_getlocation.$(OBJEXT) dwarf_getstring.$(OBJEXT) \
	dwarf_offabbrev.$(OBJEXT) dwarf_getaranges.$(OBJEXT) \
	dwarf_onearange.$(OBJEXT) dwarf_getarangeinfo.$(OBJEXT) \
	dwarf_getarange_addr.$(OBJEXT) dwarf_getattrs.$(OBJEXT) \
	dwarf_formflag.$(OBJEXT) dwarf_getmacros.$(OBJEXT) \
	dwarf_macro_getparamcnt.$(OBJEXT) dwarf_macro_opcode.$(OBJEXT) \
	dwarf_macro_param.$(OBJEXT) dwarf_macro_param1.$(OBJEXT) \
	dwarf_macro_param2.$(OBJEXT) dwarf_macro_getsrcfiles.$(OBJEXT) \
	dwarf_addrdie.$(OBJEXT) dwarf_getfuncs.$(OBJEXT) \
	dwarf_decl_file.$(OBJEXT) dwarf_decl_line.$(OBJEXT) \
	dwarf_decl_column.$(OBJEXT) dwarf_func_inline.$(OBJEXT) \
	dwarf_getsrc_file.$(OBJEXT) libdw_findcu.$(OBJEXT) \
	libdw_form.$(OBJEXT) libdw_alloc.$(OBJEXT) \
	libdw_visit_scopes.$(OBJEXT) dwarf_entry_breakpoints.$(OBJEXT) \
	dwarf_next_cfi.$(OBJEXT) cie.$(OBJEXT) fde.$(OBJEXT) \
	cfi.$(OBJEXT) frame-cache.$(OBJEXT) dwarf_frame_info.$(OBJEXT) \
	dwarf_frame_cfa.$(OBJEXT) dwarf_frame_register.$(OBJEXT) \
	dwarf_cfi_addrframe.$(OBJEXT) dwarf_getcfi.$(OBJEXT) \
	dwarf_getcfi_elf.$(OBJEXT) dwarf_cfi_end.$(OBJEXT) \
	dwarf_aggregate_size.$(OBJEXT) \
	dwarf_getlocation_implicit_pointer.$(OBJEXT) \
	dwarf_getlocation_die.$(OBJEXT) \
	dwarf_getlocation_attr.$(OBJEXT) dwarf_getalt.$(OBJEXT) \
	dwarf_setalt.$(OBJEXT) dwarf_cu_getdwarf.$(OBJEXT) \
	dwarf_cu_die.$(OBJEXT) dwarf_peel_type.$(OBJEXT) \
	dwarf_default_lower_bound.$(OBJEXT) \
	dwarf_die_addr_die.$(OBJEXT) dwarf_get_units.$(OBJEXT) \
	libdw_find_split_unit.$(OBJEXT) dwarf_cu_info.$(OBJEXT) \
	dwarf_next_lines.$(OBJEXT) dwarf_cu_dwp_section_info.$(OBJEXT)
libdw_a_OBJECTS = $(am_libdw_a_OBJECTS)
libdw_pic_a_AR = $(AR) $(ARFLAGS)
libdw_pic_a_RANLIB = $(RANLIB)
libdw_pic_a_LIBADD =
libdw_pic_a_OBJECTS = $(am_libdw_pic_a_OBJECTS)
nodist_dwarf_srclang_check_OBJECTS = dwarf_srclang_check.$(OBJEXT)
dwarf_srclang_check_OBJECTS = $(nodist_dwarf_srclang_check_OBJECTS)
dwarf_srclang_check_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/cfi.Po ./$(DEPDIR)/cie.Po \
	./$(DEPDIR)/dwarf_abbrev_hash.Po \
	./$(DEPDIR)/dwarf_abbrevhaschildren.Po \
	./$(DEPDIR)/dwarf_addrdie.Po \
	./$(DEPDIR)/dwarf_aggregate_size.Po \
	./$(DEPDIR)/dwarf_arrayorder.Po ./$(DEPDIR)/dwarf_attr.Po \
	./$(DEPDIR)/dwarf_attr_integrate.Po ./$(DEPDIR)/dwarf_begin.Po \
	./$(DEPDIR)/dwarf_begin_elf.Po ./$(DEPDIR)/dwarf_bitoffset.Po \
	./$(DEPDIR)/dwarf_bitsize.Po ./$(DEPDIR)/dwarf_bytesize.Po \
	./$(DEPDIR)/dwarf_cfi_addrframe.Po \
	./$(DEPDIR)/dwarf_cfi_end.Po ./$(DEPDIR)/dwarf_child.Po \
	./$(DEPDIR)/dwarf_cu_die.Po \
	./$(DEPDIR)/dwarf_cu_dwp_section_info.Po \
	./$(DEPDIR)/dwarf_cu_getdwarf.Po ./$(DEPDIR)/dwarf_cu_info.Po \
	./$(DEPDIR)/dwarf_cuoffset.Po ./$(DEPDIR)/dwarf_decl_column.Po \
	./$(DEPDIR)/dwarf_decl_file.Po ./$(DEPDIR)/dwarf_decl_line.Po \
	./$(DEPDIR)/dwarf_default_lower_bound.Po \
	./$(DEPDIR)/dwarf_die_addr_die.Po ./$(DEPDIR)/dwarf_diecu.Po \
	./$(DEPDIR)/dwarf_diename.Po ./$(DEPDIR)/dwarf_dieoffset.Po \
	./$(DEPDIR)/dwarf_end.Po \
	./$(DEPDIR)/dwarf_entry_breakpoints.Po \
	./$(DEPDIR)/dwarf_entrypc.Po ./$(DEPDIR)/dwarf_error.Po \
	./$(DEPDIR)/dwarf_filesrc.Po ./$(DEPDIR)/dwarf_formaddr.Po \
	./$(DEPDIR)/dwarf_formblock.Po ./$(DEPDIR)/dwarf_formflag.Po \
	./$(DEPDIR)/dwarf_formref.Po ./$(DEPDIR)/dwarf_formref_die.Po \
	./$(DEPDIR)/dwarf_formsdata.Po ./$(DEPDIR)/dwarf_formstring.Po \
	./$(DEPDIR)/dwarf_formudata.Po ./$(DEPDIR)/dwarf_frame_cfa.Po \
	./$(DEPDIR)/dwarf_frame_info.Po \
	./$(DEPDIR)/dwarf_frame_register.Po \
	./$(DEPDIR)/dwarf_func_inline.Po \
	./$(DEPDIR)/dwarf_get_units.Po ./$(DEPDIR)/dwarf_getabbrev.Po \
	./$(DEPDIR)/dwarf_getabbrevattr.Po \
	./$(DEPDIR)/dwarf_getabbrevcode.Po \
	./$(DEPDIR)/dwarf_getabbrevtag.Po ./$(DEPDIR)/dwarf_getalt.Po \
	./$(DEPDIR)/dwarf_getarange_addr.Po \
	./$(DEPDIR)/dwarf_getarangeinfo.Po \
	./$(DEPDIR)/dwarf_getaranges.Po \
	./$(DEPDIR)/dwarf_getattrcnt.Po ./$(DEPDIR)/dwarf_getattrs.Po \
	./$(DEPDIR)/dwarf_getcfi.Po ./$(DEPDIR)/dwarf_getcfi_elf.Po \
	./$(DEPDIR)/dwarf_getelf.Po ./$(DEPDIR)/dwarf_getfuncs.Po \
	./$(DEPDIR)/dwarf_getlocation.Po \
	./$(DEPDIR)/dwarf_getlocation_attr.Po \
	./$(DEPDIR)/dwarf_getlocation_die.Po \
	./$(DEPDIR)/dwarf_getlocation_implicit_pointer.Po \
	./$(DEPDIR)/dwarf_getmacros.Po \
	./$(DEPDIR)/dwarf_getpubnames.Po \
	./$(DEPDIR)/dwarf_getscopes.Po \
	./$(DEPDIR)/dwarf_getscopes_die.Po \
	./$(DEPDIR)/dwarf_getscopevar.Po \
	./$(DEPDIR)/dwarf_getsrc_die.Po \
	./$(DEPDIR)/dwarf_getsrc_file.Po \
	./$(DEPDIR)/dwarf_getsrcdirs.Po \
	./$(DEPDIR)/dwarf_getsrcfiles.Po \
	./$(DEPDIR)/dwarf_getsrclines.Po \
	./$(DEPDIR)/dwarf_getstring.Po ./$(DEPDIR)/dwarf_hasattr.Po \
	./$(DEPDIR)/dwarf_hasattr_integrate.Po \
	./$(DEPDIR)/dwarf_haschildren.Po ./$(DEPDIR)/dwarf_hasform.Po \
	./$(DEPDIR)/dwarf_haspc.Po ./$(DEPDIR)/dwarf_highpc.Po \
	./$(DEPDIR)/dwarf_line_file.Po ./$(DEPDIR)/dwarf_lineaddr.Po \
	./$(DEPDIR)/dwarf_linebeginstatement.Po \
	./$(DEPDIR)/dwarf_lineblock.Po ./$(DEPDIR)/dwarf_linecol.Po \
	./$(DEPDIR)/dwarf_linecontext.Po \
	./$(DEPDIR)/dwarf_linediscriminator.Po \
	./$(DEPDIR)/dwarf_lineendsequence.Po \
	./$(DEPDIR)/dwarf_lineepiloguebegin.Po \
	./$(DEPDIR)/dwarf_linefunctionname.Po \
	./$(DEPDIR)/dwarf_lineisa.Po ./$(DEPDIR)/dwarf_lineno.Po \
	./$(DEPDIR)/dwarf_lineop_index.Po \
	./$(DEPDIR)/dwarf_lineprologueend.Po \
	./$(DEPDIR)/dwarf_linesrc.Po ./$(DEPDIR)/dwarf_lowpc.Po \
	./$(DEPDIR)/dwarf_macro_getparamcnt.Po \
	./$(DEPDIR)/dwarf_macro_getsrcfiles.Po \
	./$(DEPDIR)/dwarf_macro_opcode.Po \
	./$(DEPDIR)/dwarf_macro_param.Po \
	./$(DEPDIR)/dwarf_macro_param1.Po \
	./$(DEPDIR)/dwarf_macro_param2.Po \
	./$(DEPDIR)/dwarf_next_cfi.Po ./$(DEPDIR)/dwarf_next_lines.Po \
	./$(DEPDIR)/dwarf_nextcu.Po ./$(DEPDIR)/dwarf_offabbrev.Po \
	./$(DEPDIR)/dwarf_offdie.Po ./$(DEPDIR)/dwarf_onearange.Po \
	./$(DEPDIR)/dwarf_onesrcline.Po ./$(DEPDIR)/dwarf_peel_type.Po \
	./$(DEPDIR)/dwarf_ranges.Po ./$(DEPDIR)/dwarf_setalt.Po \
	./$(DEPDIR)/dwarf_siblingof.Po ./$(DEPDIR)/dwarf_sig8_hash.Po \
	./$(DEPDIR)/dwarf_srclang.Po \
	./$(DEPDIR)/dwarf_srclang_check.Po ./$(DEPDIR)/dwarf_tag.Po \
	./$(DEPDIR)/dwarf_whatattr.Po ./$(DEPDIR)/dwarf_whatform.Po \
	./$(DEPDIR)/fde.Po ./$(DEPDIR)/frame-cache.Po \
	./$(DEPDIR)/libdw_alloc.Po \
	./$(DEPDIR)/libdw_find_split_unit.Po \
	./$(DEPDIR)/libdw_findcu.Po ./$(DEPDIR)/libdw_form.Po \
	./$(DEPDIR)/libdw_visit_scopes.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libdw_a_SOURCES) $(libdw_pic_a_SOURCES) \
	$(nodist_dwarf_srclang_check_SOURCES)
DIST_SOURCES = $(libdw_a_SOURCES) $(libdw_pic_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(noinst_DATA)
HEADERS = $(include_HEADERS) $(noinst_HEADERS) $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  $$am__collect_skipped_logs \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(IGNORE_SKIPPED_LOGS)'; then		\
  am__collect_skipped_logs='--collect-skipped-logs no';	\
else							\
  am__collect_skipped_logs='';				\
fi;							\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/eu.am $(top_srcdir)/config/test-driver \
	ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BZ2_LIB = @BZ2_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_BIARCH = @CC_BIARCH@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEBUGINFOD_IMA_CERT_PATH = @DEBUGINFOD_IMA_CERT_PATH@
DEBUGINFOD_URLS = @DEBUGINFOD_URLS@
DEBUGPRED = @DEBUGPRED@
DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -DLOCALEDIR='"${localedir}"'
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
GCOV = @GCOV@
GENHTML = @GENHTML@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
HAVE_BISON = @HAVE_BISON@
HAVE_BUNZIP2 = @HAVE_BUNZIP2@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_FLEX = @HAVE_FLEX@
HAVE_GAWK = @HAVE_GAWK@
HAVE_VALGRIND = @HAVE_VALGRIND@
HAVE_ZSTD = @HAVE_ZSTD@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LCOV = @LCOV@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBDEBUGINFOD_SONAME = @LIBDEBUGINFOD_SONAME@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBLZMA = @LIBLZMA@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBZSTD = @LIBZSTD@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
MSGMERGE_FOR_MSGFMT_OPTION = @MSGMERGE_FOR_MSGFMT_OPTION@
NM = @NM@
NO_UNDEFINED = @NO_UNDEFINED@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
RANLIB = @RANLIB@
READELF = @READELF@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = 1
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
YACC = @YACC@
YFLAGS = @YFLAGS@
ZSTD_COMPRESS_CFLAGS = @ZSTD_COMPRESS_CFLAGS@
ZSTD_COMPRESS_LIBS = @ZSTD_COMPRESS_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__rm_f_notfound = @am__rm_f_notfound@
am__tar = @am__tar@
am__untar = @am__untar@
am__xargs_n = @am__xargs_n@
argp_LDADD = @argp_LDADD@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
crypto_LIBS = @crypto_LIBS@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dso_LDFLAGS = @dso_LDFLAGS@
dvidir = @dvidir@
eu_version = @eu_version@
exec_prefix = @exec_prefix@
fpic_CFLAGS = @fpic_CFLAGS@
fpie_CFLAGS = @fpie_CFLAGS@
fts_LIBS = @fts_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
jsonc_CFLAGS = @jsonc_CFLAGS@
jsonc_LIBS = @jsonc_LIBS@
libarchive_CFLAGS = @libarchive_CFLAGS@
libarchive_LIBS = @libarchive_LIBS@
libcurl_CFLAGS = @libcurl_CFLAGS@
libcurl_LIBS = @libcurl_LIBS@
libdir = @libdir@
libexecdir = @libexecdir@
libmicrohttpd_CFLAGS = @libmicrohttpd_CFLAGS@
libmicrohttpd_LIBS = @libmicrohttpd_LIBS@
localedir = @localedir@
localedir_c = @localedir_c@
localedir_c_make = @localedir_c_make@
localstatedir = @localstatedir@
lzma_LIBS = @lzma_LIBS@
mandir = @mandir@
mkdir_p = @mkdir_p@
obstack_LIBS = @obstack_LIBS@
oldincludedir = @oldincludedir@
oldlibmicrohttpd_CFLAGS = @oldlibmicrohttpd_CFLAGS@
oldlibmicrohttpd_LIBS = @oldlibmicrohttpd_LIBS@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
rpm_LIBS = @rpm_LIBS@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sqlite3_CFLAGS = @sqlite3_CFLAGS@
sqlite3_LIBS = @sqlite3_LIBS@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
zip_LIBS = @zip_LIBS@
zstd_LIBS = @zstd_LIBS@
AM_CPPFLAGS = -iquote . -I$(srcdir) -I$(top_srcdir)/lib -I.. \
	-I$(srcdir)/../libebl -I$(srcdir)/../libelf \
	-I$(srcdir)/../libdwelf -pthread

# Drop the 'u' flag that automake adds by default. It is incompatible
# with deterministic archives.
ARFLAGS = cr
@ADD_STACK_USAGE_WARNING_FALSE@STACK_USAGE_WARNING = 

# Warn about stack usage of more than 256K = 262144 bytes.
@ADD_STACK_USAGE_WARNING_TRUE@STACK_USAGE_WARNING = -Wstack-usage=262144
@ADD_STACK_USAGE_WARNING_FALSE@STACK_USAGE_NO_ERROR = 
@ADD_STACK_USAGE_WARNING_TRUE@STACK_USAGE_NO_ERROR = -Wno-error=stack-usage=
@SANE_LOGICAL_OP_WARNING_FALSE@LOGICAL_OP_WARNING = 
@SANE_LOGICAL_OP_WARNING_TRUE@LOGICAL_OP_WARNING = -Wlogical-op
@HAVE_DUPLICATED_COND_WARNING_FALSE@DUPLICATED_COND_WARNING = 
@HAVE_DUPLICATED_COND_WARNING_TRUE@DUPLICATED_COND_WARNING = -Wduplicated-cond
@HAVE_NULL_DEREFERENCE_WARNING_FALSE@NULL_DEREFERENCE_WARNING = 
@HAVE_NULL_DEREFERENCE_WARNING_TRUE@NULL_DEREFERENCE_WARNING = -Wnull-dereference
@HAVE_IMPLICIT_FALLTHROUGH_5_WARNING_FALSE@@HAVE_IMPLICIT_FALLTHROUGH_WARNING_TRUE@IMPLICIT_FALLTHROUGH_WARNING = -Wimplicit-fallthrough

# Use strict fallthrough. Only __attribute__((fallthrough)) will prevent the
# warning
@HAVE_IMPLICIT_FALLTHROUGH_5_WARNING_TRUE@@HAVE_IMPLICIT_FALLTHROUGH_WARNING_TRUE@IMPLICIT_FALLTHROUGH_WARNING = -Wimplicit-fallthrough=5
@HAVE_IMPLICIT_FALLTHROUGH_WARNING_FALSE@IMPLICIT_FALLTHROUGH_WARNING = 
@HAVE_TRAMPOLINES_WARNING_FALSE@TRAMPOLINES_WARNING = 
@HAVE_TRAMPOLINES_WARNING_TRUE@TRAMPOLINES_WARNING = -Wtrampolines
@HAVE_NO_PACKED_NOT_ALIGNED_WARNING_FALSE@NO_PACKED_NOT_ALIGNED_WARNING = 
@HAVE_NO_PACKED_NOT_ALIGNED_WARNING_TRUE@NO_PACKED_NOT_ALIGNED_WARNING = -Wno-packed-not-aligned
@HAVE_USE_AFTER_FREE3_WARNING_FALSE@USE_AFTER_FREE3_WARNING = 
@HAVE_USE_AFTER_FREE3_WARNING_TRUE@USE_AFTER_FREE3_WARNING = -Wuse-after-free=3
AM_CFLAGS = -Wall -Wshadow -Wformat=2 -Wold-style-definition \
	-Wstrict-prototypes $(TRAMPOLINES_WARNING) \
	$(LOGICAL_OP_WARNING) $(DUPLICATED_COND_WARNING) \
	$(NULL_DEREFERENCE_WARNING) $(IMPLICIT_FALLTHROUGH_WARNING) \
	$(USE_AFTER_FREE3_WARNING) $(if $($(*F)_no_Werror),,-Werror) \
	$(if $($(*F)_no_Wunused),,-Wunused -Wextra) $(if \
	$($(*F)_no_Wstack_usage),,$(STACK_USAGE_WARNING)) $(if \
	$($(*F)_no_Wpacked_not_aligned),$(NO_PACKED_NOT_ALIGNED_WARNING),) \
	$($(*F)_CFLAGS) $(am__append_2)
AM_CXXFLAGS = -std=c++11 -Wall -Wshadow \
	   $(TRAMPOLINES_WARNING) \
	   $(LOGICAL_OP_WARNING) $(DUPLICATED_COND_WARNING) \
	   $(NULL_DEREFERENCE_WARNING) $(IMPLICIT_FALLTHROUGH_WARNING) \
	   $(if $($(*F)_no_Werror),,-Werror) \
	   $(if $($(*F)_no_Wunused),,-Wunused -Wextra) \
	   $(if $($(*F)_no_Wstack_usage),,$(STACK_USAGE_WARNING)) \
	   $(if $($(*F)_no_Wpacked_not_aligned),$(NO_PACKED_NOT_ALIGNED_WARNING),) \
	   $($(*F)_CXXFLAGS)

COMPILE.os = $(filter-out -fprofile-arcs -ftest-coverage, $(COMPILE))
DEFS.os = -DPIC -DSHARED $(am__append_1)
COVERAGE_OUTPUT_DIRECTORY = coverage
COVERAGE_OUTPUT_FILE = $(PACKAGE_NAME).lcov
textrel_msg = echo "WARNING: TEXTREL found in '$@'"
@FATAL_TEXTREL_FALSE@textrel_found = $(textrel_msg)
@FATAL_TEXTREL_TRUE@textrel_found = $(textrel_msg); exit 1
textrel_check = if $(READELF) -d $@ | grep -F -q TEXTREL; then $(textrel_found); fi
lib_LIBRARIES = libdw.a
noinst_LIBRARIES = libdw_pic.a
noinst_DATA = $(noinst_LIBRARIES:_pic.a=.so)
include_HEADERS = dwarf.h
pkginclude_HEADERS = libdw.h known-dwarf.h
libdw_a_SOURCES = dwarf_begin.c dwarf_begin_elf.c dwarf_end.c dwarf_getelf.c \
		  dwarf_getpubnames.c dwarf_getabbrev.c dwarf_tag.c \
		  dwarf_error.c dwarf_nextcu.c dwarf_diename.c dwarf_offdie.c \
		  dwarf_attr.c dwarf_formstring.c \
		  dwarf_abbrev_hash.c dwarf_sig8_hash.c \
		  dwarf_attr_integrate.c dwarf_hasattr_integrate.c \
		  dwarf_child.c dwarf_haschildren.c dwarf_formaddr.c \
		  dwarf_formudata.c dwarf_formsdata.c dwarf_lowpc.c \
		  dwarf_entrypc.c dwarf_haspc.c dwarf_highpc.c dwarf_ranges.c \
		  dwarf_formref.c dwarf_formref_die.c dwarf_siblingof.c \
		  dwarf_dieoffset.c dwarf_cuoffset.c dwarf_diecu.c \
		  dwarf_hasattr.c dwarf_hasform.c \
		  dwarf_whatform.c dwarf_whatattr.c \
		  dwarf_bytesize.c dwarf_arrayorder.c dwarf_bitsize.c \
		  dwarf_bitoffset.c dwarf_srclang.c dwarf_getabbrevtag.c \
		  dwarf_getabbrevcode.c dwarf_abbrevhaschildren.c \
		  dwarf_getattrcnt.c dwarf_getabbrevattr.c \
		  dwarf_getsrclines.c dwarf_getsrc_die.c \
		  dwarf_getscopes.c dwarf_getscopes_die.c dwarf_getscopevar.c \
		  dwarf_linesrc.c dwarf_lineno.c dwarf_lineaddr.c \
		  dwarf_linecol.c dwarf_linebeginstatement.c \
		  dwarf_lineendsequence.c dwarf_lineblock.c \
		  dwarf_linecontext.c dwarf_linefunctionname.c \
		  dwarf_lineprologueend.c dwarf_lineepiloguebegin.c \
		  dwarf_lineisa.c dwarf_linediscriminator.c \
		  dwarf_lineop_index.c dwarf_line_file.c \
		  dwarf_onesrcline.c dwarf_formblock.c \
		  dwarf_getsrcfiles.c dwarf_filesrc.c dwarf_getsrcdirs.c \
		  dwarf_getlocation.c dwarf_getstring.c dwarf_offabbrev.c \
		  dwarf_getaranges.c dwarf_onearange.c dwarf_getarangeinfo.c \
		  dwarf_getarange_addr.c dwarf_getattrs.c dwarf_formflag.c \
		  dwarf_getmacros.c dwarf_macro_getparamcnt.c	\
		  dwarf_macro_opcode.c dwarf_macro_param.c	\
		  dwarf_macro_param1.c dwarf_macro_param2.c	\
		  dwarf_macro_getsrcfiles.c			\
		  dwarf_addrdie.c dwarf_getfuncs.c \
		  dwarf_decl_file.c dwarf_decl_line.c dwarf_decl_column.c \
		  dwarf_func_inline.c dwarf_getsrc_file.c \
		  libdw_findcu.c libdw_form.c libdw_alloc.c \
		  libdw_visit_scopes.c \
		  dwarf_entry_breakpoints.c \
		  dwarf_next_cfi.c \
		  cie.c fde.c cfi.c frame-cache.c \
		  dwarf_frame_info.c dwarf_frame_cfa.c dwarf_frame_register.c \
		  dwarf_cfi_addrframe.c \
		  dwarf_getcfi.c dwarf_getcfi_elf.c dwarf_cfi_end.c \
		  dwarf_aggregate_size.c dwarf_getlocation_implicit_pointer.c \
		  dwarf_getlocation_die.c dwarf_getlocation_attr.c \
		  dwarf_getalt.c dwarf_setalt.c dwarf_cu_getdwarf.c \
		  dwarf_cu_die.c dwarf_peel_type.c dwarf_default_lower_bound.c \
		  dwarf_die_addr_die.c dwarf_get_units.c \
		  libdw_find_split_unit.c dwarf_cu_info.c \
		  dwarf_next_lines.c dwarf_cu_dwp_section_info.c

@MAINTAINER_MODE_TRUE@BUILT_SOURCES = $(srcdir)/known-dwarf.h
libdw_pic_a_SOURCES = 
am_libdw_pic_a_OBJECTS = $(libdw_a_SOURCES:.c=.os)
libdw_so_LIBS = ../libebl/libebl_pic.a ../backends/libebl_backends_pic.a \
		../libcpu/libcpu_pic.a libdw_pic.a ../libdwelf/libdwelf_pic.a \
		../libdwfl/libdwfl_pic.a ../libdwfl_stacktrace/libdwfl_stacktrace_pic.a

libdw_so_DEPS = ../lib/libeu.a ../libelf/libelf.so
libdw_so_LDLIBS = $(libdw_so_DEPS) -ldl -lz $(argp_LDADD) $(fts_LIBS) $(obstack_LIBS) $(zip_LIBS) -pthread
libdwfl_objects = $(shell cat ../libdwfl/libdwfl.manifest)
libdw_a_LIBADD = $(addprefix ../libdwfl/,$(libdwfl_objects)) \
	$(addprefix \
	../libdwfl_stacktrace/,$(libdwfl_stacktrace_objects)) \
	$(addprefix ../libdwelf/,$(libdwelf_objects)) $(addprefix \
	../libebl/,$(libebl_objects)) $(addprefix \
	../backends/,$(backends_objects)) $(addprefix \
	../libcpu/,$(libcpu_objects))
libdwfl_stacktrace_objects = $(shell cat ../libdwfl_stacktrace/libdwfl_stacktrace.manifest)
libdwelf_objects = $(shell cat ../libdwelf/libdwelf.manifest)
libebl_objects = $(shell cat ../libebl/libebl.manifest)
backends_objects = $(shell cat ../backends/libebl_backends.manifest)
libcpu_objects = $(shell cat ../libcpu/libcpu.manifest)
noinst_HEADERS = libdwP.h memory-access.h dwarf_abbrev_hash.h \
		 dwarf_sig8_hash.h cfi.h encoded-value.h

EXTRA_DIST = libdw.map
EXTRA_libdw_a_DEPENDENCIES = libdw.manifest
MOSTLYCLEANFILES = $(am_libdw_a_OBJECTS) $(am_libdw_pic_a_OBJECTS) libdw.so.$(VERSION)
CLEANFILES = libdw.so $(EXTRA_libdw_a_DEPENDENCIES)
MAINTAINERCLEANFILES = $(srcdir)/known-dwarf.h
TESTS = $(check_PROGRAMS)
CHECK_DEF_FLAGS = $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -DMAIN_CHECK=1
nodist_dwarf_srclang_check_SOURCES = dwarf_srclang_check.c
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/config/eu.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits libdw/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits libdw/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/eu.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-$(am__rm_f) $(check_PROGRAMS)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-$(am__rm_f) $(lib_LIBRARIES)

clean-noinstLIBRARIES:
	-$(am__rm_f) $(noinst_LIBRARIES)

libdw.a: $(libdw_a_OBJECTS) $(libdw_a_DEPENDENCIES) $(EXTRA_libdw_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libdw.a
	$(AM_V_AR)$(libdw_a_AR) libdw.a $(libdw_a_OBJECTS) $(libdw_a_LIBADD)
	$(AM_V_at)$(libdw_a_RANLIB) libdw.a

libdw_pic.a: $(libdw_pic_a_OBJECTS) $(libdw_pic_a_DEPENDENCIES) $(EXTRA_libdw_pic_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libdw_pic.a
	$(AM_V_AR)$(libdw_pic_a_AR) libdw_pic.a $(libdw_pic_a_OBJECTS) $(libdw_pic_a_LIBADD)
	$(AM_V_at)$(libdw_pic_a_RANLIB) libdw_pic.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfi.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_abbrev_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_abbrevhaschildren.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_addrdie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_aggregate_size.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_arrayorder.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_attr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_attr_integrate.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_begin.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_begin_elf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bitoffset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bitsize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bytesize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cfi_addrframe.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cfi_end.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_child.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cu_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cu_dwp_section_info.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cu_getdwarf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cu_info.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_cuoffset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_decl_column.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_decl_file.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_decl_line.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_default_lower_bound.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_die_addr_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_diecu.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_diename.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_dieoffset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_end.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_entry_breakpoints.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_entrypc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_error.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_filesrc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formaddr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formblock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formflag.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formref.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formref_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formsdata.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formstring.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formudata.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_frame_cfa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_frame_info.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_frame_register.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_func_inline.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_units.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getabbrev.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getabbrevattr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getabbrevcode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getabbrevtag.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getalt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getarange_addr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getarangeinfo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getaranges.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getattrcnt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getattrs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getcfi.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getcfi_elf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getelf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getfuncs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getlocation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getlocation_attr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getlocation_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getlocation_implicit_pointer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getmacros.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getpubnames.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getscopes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getscopes_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getscopevar.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getsrc_die.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getsrc_file.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getsrcdirs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getsrcfiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getsrclines.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getstring.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_hasattr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_hasattr_integrate.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_haschildren.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_hasform.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_haspc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_highpc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_line_file.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineaddr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linebeginstatement.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineblock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linecol.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linecontext.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linediscriminator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineendsequence.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineepiloguebegin.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linefunctionname.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineisa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineno.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineop_index.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineprologueend.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linesrc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lowpc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_getparamcnt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_getsrcfiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_opcode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_param.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_param1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_macro_param2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_next_cfi.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_next_lines.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_nextcu.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_offabbrev.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_offdie.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_onearange.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_onesrcline.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_peel_type.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_ranges.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_setalt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_siblingof.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_sig8_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_srclang.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_srclang_check.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_tag.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_whatattr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_whatform.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fde.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frame-cache.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdw_alloc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdw_find_split_unit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdw_findcu.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdw_form.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdw_visit_scopes.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@: >>$@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:
$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	output_system_information () \
	{ \
          echo;                                     \
	  { uname -a | $(AWK) '{                    \
  printf "System information (uname -a):";          \
  for (i = 1; i < NF; ++i)                          \
    {                                               \
      if (i != 2)                                   \
        printf " %s", $$i;                          \
    }                                               \
  printf "\n";                                      \
}'; } 2>&1;                                         \
	  if test -r /etc/os-release; then          \
	    echo "Distribution information (/etc/os-release):"; \
	    sed 8q /etc/os-release;                 \
	  elif test -r /etc/issue; then             \
	    echo "Distribution information (/etc/issue):";      \
	    cat /etc/issue;                         \
	  fi;                                       \
	}; \
	please_report () \
	{ \
echo "Some test(s) failed.  Please report this to $(PACKAGE_BUGREPORT),";    \
echo "together with the test-suite.log file (gzipped) and your system";      \
echo "information.  Thanks.";                                                \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  output_system_information;                                    \
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG) for debugging.$${std}";\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    please_report | sed -e "s/^/$${col}/" -e s/'$$'/"$${std}"/; \
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@$(am__rm_f) $(RECHECK_LOGS)
	@$(am__rm_f) $(RECHECK_LOGS:.log=.trs)
	@$(am__rm_f) $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@$(am__rm_f) $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
dwarf_srclang_check.log: dwarf_srclang_check$(EXEEXT)
	@p='dwarf_srclang_check$(EXEEXT)'; \
	b='dwarf_srclang_check'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-am
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-$(am__rm_f) $(MOSTLYCLEANFILES)
	-$(am__rm_f) $(TEST_LOGS)
	-$(am__rm_f) $(TEST_LOGS:.log=.trs)
	-$(am__rm_f) $(TEST_SUITE_LOG)

clean-generic:
	-$(am__rm_f) $(CLEANFILES)

distclean-generic:
	-$(am__rm_f) $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || $(am__rm_f) $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-$(am__rm_f) $(BUILT_SOURCES)
	-$(am__rm_f) $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f ./$(DEPDIR)/cfi.Po
	-rm -f ./$(DEPDIR)/cie.Po
	-rm -f ./$(DEPDIR)/dwarf_abbrev_hash.Po
	-rm -f ./$(DEPDIR)/dwarf_abbrevhaschildren.Po
	-rm -f ./$(DEPDIR)/dwarf_addrdie.Po
	-rm -f ./$(DEPDIR)/dwarf_aggregate_size.Po
	-rm -f ./$(DEPDIR)/dwarf_arrayorder.Po
	-rm -f ./$(DEPDIR)/dwarf_attr.Po
	-rm -f ./$(DEPDIR)/dwarf_attr_integrate.Po
	-rm -f ./$(DEPDIR)/dwarf_begin.Po
	-rm -f ./$(DEPDIR)/dwarf_begin_elf.Po
	-rm -f ./$(DEPDIR)/dwarf_bitoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_bitsize.Po
	-rm -f ./$(DEPDIR)/dwarf_bytesize.Po
	-rm -f ./$(DEPDIR)/dwarf_cfi_addrframe.Po
	-rm -f ./$(DEPDIR)/dwarf_cfi_end.Po
	-rm -f ./$(DEPDIR)/dwarf_child.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_die.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_dwp_section_info.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_getdwarf.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_info.Po
	-rm -f ./$(DEPDIR)/dwarf_cuoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_column.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_file.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_line.Po
	-rm -f ./$(DEPDIR)/dwarf_default_lower_bound.Po
	-rm -f ./$(DEPDIR)/dwarf_die_addr_die.Po
	-rm -f ./$(DEPDIR)/dwarf_diecu.Po
	-rm -f ./$(DEPDIR)/dwarf_diename.Po
	-rm -f ./$(DEPDIR)/dwarf_dieoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_end.Po
	-rm -f ./$(DEPDIR)/dwarf_entry_breakpoints.Po
	-rm -f ./$(DEPDIR)/dwarf_entrypc.Po
	-rm -f ./$(DEPDIR)/dwarf_error.Po
	-rm -f ./$(DEPDIR)/dwarf_filesrc.Po
	-rm -f ./$(DEPDIR)/dwarf_formaddr.Po
	-rm -f ./$(DEPDIR)/dwarf_formblock.Po
	-rm -f ./$(DEPDIR)/dwarf_formflag.Po
	-rm -f ./$(DEPDIR)/dwarf_formref.Po
	-rm -f ./$(DEPDIR)/dwarf_formref_die.Po
	-rm -f ./$(DEPDIR)/dwarf_formsdata.Po
	-rm -f ./$(DEPDIR)/dwarf_formstring.Po
	-rm -f ./$(DEPDIR)/dwarf_formudata.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_cfa.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_info.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_register.Po
	-rm -f ./$(DEPDIR)/dwarf_func_inline.Po
	-rm -f ./$(DEPDIR)/dwarf_get_units.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrev.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevattr.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevcode.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevtag.Po
	-rm -f ./$(DEPDIR)/dwarf_getalt.Po
	-rm -f ./$(DEPDIR)/dwarf_getarange_addr.Po
	-rm -f ./$(DEPDIR)/dwarf_getarangeinfo.Po
	-rm -f ./$(DEPDIR)/dwarf_getaranges.Po
	-rm -f ./$(DEPDIR)/dwarf_getattrcnt.Po
	-rm -f ./$(DEPDIR)/dwarf_getattrs.Po
	-rm -f ./$(DEPDIR)/dwarf_getcfi.Po
	-rm -f ./$(DEPDIR)/dwarf_getcfi_elf.Po
	-rm -f ./$(DEPDIR)/dwarf_getelf.Po
	-rm -f ./$(DEPDIR)/dwarf_getfuncs.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_attr.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_implicit_pointer.Po
	-rm -f ./$(DEPDIR)/dwarf_getmacros.Po
	-rm -f ./$(DEPDIR)/dwarf_getpubnames.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopes.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopes_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopevar.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrc_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrc_file.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrcdirs.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrcfiles.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrclines.Po
	-rm -f ./$(DEPDIR)/dwarf_getstring.Po
	-rm -f ./$(DEPDIR)/dwarf_hasattr.Po
	-rm -f ./$(DEPDIR)/dwarf_hasattr_integrate.Po
	-rm -f ./$(DEPDIR)/dwarf_haschildren.Po
	-rm -f ./$(DEPDIR)/dwarf_hasform.Po
	-rm -f ./$(DEPDIR)/dwarf_haspc.Po
	-rm -f ./$(DEPDIR)/dwarf_highpc.Po
	-rm -f ./$(DEPDIR)/dwarf_line_file.Po
	-rm -f ./$(DEPDIR)/dwarf_lineaddr.Po
	-rm -f ./$(DEPDIR)/dwarf_linebeginstatement.Po
	-rm -f ./$(DEPDIR)/dwarf_lineblock.Po
	-rm -f ./$(DEPDIR)/dwarf_linecol.Po
	-rm -f ./$(DEPDIR)/dwarf_linecontext.Po
	-rm -f ./$(DEPDIR)/dwarf_linediscriminator.Po
	-rm -f ./$(DEPDIR)/dwarf_lineendsequence.Po
	-rm -f ./$(DEPDIR)/dwarf_lineepiloguebegin.Po
	-rm -f ./$(DEPDIR)/dwarf_linefunctionname.Po
	-rm -f ./$(DEPDIR)/dwarf_lineisa.Po
	-rm -f ./$(DEPDIR)/dwarf_lineno.Po
	-rm -f ./$(DEPDIR)/dwarf_lineop_index.Po
	-rm -f ./$(DEPDIR)/dwarf_lineprologueend.Po
	-rm -f ./$(DEPDIR)/dwarf_linesrc.Po
	-rm -f ./$(DEPDIR)/dwarf_lowpc.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_getparamcnt.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_getsrcfiles.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_opcode.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param1.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param2.Po
	-rm -f ./$(DEPDIR)/dwarf_next_cfi.Po
	-rm -f ./$(DEPDIR)/dwarf_next_lines.Po
	-rm -f ./$(DEPDIR)/dwarf_nextcu.Po
	-rm -f ./$(DEPDIR)/dwarf_offabbrev.Po
	-rm -f ./$(DEPDIR)/dwarf_offdie.Po
	-rm -f ./$(DEPDIR)/dwarf_onearange.Po
	-rm -f ./$(DEPDIR)/dwarf_onesrcline.Po
	-rm -f ./$(DEPDIR)/dwarf_peel_type.Po
	-rm -f ./$(DEPDIR)/dwarf_ranges.Po
	-rm -f ./$(DEPDIR)/dwarf_setalt.Po
	-rm -f ./$(DEPDIR)/dwarf_siblingof.Po
	-rm -f ./$(DEPDIR)/dwarf_sig8_hash.Po
	-rm -f ./$(DEPDIR)/dwarf_srclang.Po
	-rm -f ./$(DEPDIR)/dwarf_srclang_check.Po
	-rm -f ./$(DEPDIR)/dwarf_tag.Po
	-rm -f ./$(DEPDIR)/dwarf_whatattr.Po
	-rm -f ./$(DEPDIR)/dwarf_whatform.Po
	-rm -f ./$(DEPDIR)/fde.Po
	-rm -f ./$(DEPDIR)/frame-cache.Po
	-rm -f ./$(DEPDIR)/libdw_alloc.Po
	-rm -f ./$(DEPDIR)/libdw_find_split_unit.Po
	-rm -f ./$(DEPDIR)/libdw_findcu.Po
	-rm -f ./$(DEPDIR)/libdw_form.Po
	-rm -f ./$(DEPDIR)/libdw_visit_scopes.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f ./$(DEPDIR)/cfi.Po
	-rm -f ./$(DEPDIR)/cie.Po
	-rm -f ./$(DEPDIR)/dwarf_abbrev_hash.Po
	-rm -f ./$(DEPDIR)/dwarf_abbrevhaschildren.Po
	-rm -f ./$(DEPDIR)/dwarf_addrdie.Po
	-rm -f ./$(DEPDIR)/dwarf_aggregate_size.Po
	-rm -f ./$(DEPDIR)/dwarf_arrayorder.Po
	-rm -f ./$(DEPDIR)/dwarf_attr.Po
	-rm -f ./$(DEPDIR)/dwarf_attr_integrate.Po
	-rm -f ./$(DEPDIR)/dwarf_begin.Po
	-rm -f ./$(DEPDIR)/dwarf_begin_elf.Po
	-rm -f ./$(DEPDIR)/dwarf_bitoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_bitsize.Po
	-rm -f ./$(DEPDIR)/dwarf_bytesize.Po
	-rm -f ./$(DEPDIR)/dwarf_cfi_addrframe.Po
	-rm -f ./$(DEPDIR)/dwarf_cfi_end.Po
	-rm -f ./$(DEPDIR)/dwarf_child.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_die.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_dwp_section_info.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_getdwarf.Po
	-rm -f ./$(DEPDIR)/dwarf_cu_info.Po
	-rm -f ./$(DEPDIR)/dwarf_cuoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_column.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_file.Po
	-rm -f ./$(DEPDIR)/dwarf_decl_line.Po
	-rm -f ./$(DEPDIR)/dwarf_default_lower_bound.Po
	-rm -f ./$(DEPDIR)/dwarf_die_addr_die.Po
	-rm -f ./$(DEPDIR)/dwarf_diecu.Po
	-rm -f ./$(DEPDIR)/dwarf_diename.Po
	-rm -f ./$(DEPDIR)/dwarf_dieoffset.Po
	-rm -f ./$(DEPDIR)/dwarf_end.Po
	-rm -f ./$(DEPDIR)/dwarf_entry_breakpoints.Po
	-rm -f ./$(DEPDIR)/dwarf_entrypc.Po
	-rm -f ./$(DEPDIR)/dwarf_error.Po
	-rm -f ./$(DEPDIR)/dwarf_filesrc.Po
	-rm -f ./$(DEPDIR)/dwarf_formaddr.Po
	-rm -f ./$(DEPDIR)/dwarf_formblock.Po
	-rm -f ./$(DEPDIR)/dwarf_formflag.Po
	-rm -f ./$(DEPDIR)/dwarf_formref.Po
	-rm -f ./$(DEPDIR)/dwarf_formref_die.Po
	-rm -f ./$(DEPDIR)/dwarf_formsdata.Po
	-rm -f ./$(DEPDIR)/dwarf_formstring.Po
	-rm -f ./$(DEPDIR)/dwarf_formudata.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_cfa.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_info.Po
	-rm -f ./$(DEPDIR)/dwarf_frame_register.Po
	-rm -f ./$(DEPDIR)/dwarf_func_inline.Po
	-rm -f ./$(DEPDIR)/dwarf_get_units.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrev.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevattr.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevcode.Po
	-rm -f ./$(DEPDIR)/dwarf_getabbrevtag.Po
	-rm -f ./$(DEPDIR)/dwarf_getalt.Po
	-rm -f ./$(DEPDIR)/dwarf_getarange_addr.Po
	-rm -f ./$(DEPDIR)/dwarf_getarangeinfo.Po
	-rm -f ./$(DEPDIR)/dwarf_getaranges.Po
	-rm -f ./$(DEPDIR)/dwarf_getattrcnt.Po
	-rm -f ./$(DEPDIR)/dwarf_getattrs.Po
	-rm -f ./$(DEPDIR)/dwarf_getcfi.Po
	-rm -f ./$(DEPDIR)/dwarf_getcfi_elf.Po
	-rm -f ./$(DEPDIR)/dwarf_getelf.Po
	-rm -f ./$(DEPDIR)/dwarf_getfuncs.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_attr.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getlocation_implicit_pointer.Po
	-rm -f ./$(DEPDIR)/dwarf_getmacros.Po
	-rm -f ./$(DEPDIR)/dwarf_getpubnames.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopes.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopes_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getscopevar.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrc_die.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrc_file.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrcdirs.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrcfiles.Po
	-rm -f ./$(DEPDIR)/dwarf_getsrclines.Po
	-rm -f ./$(DEPDIR)/dwarf_getstring.Po
	-rm -f ./$(DEPDIR)/dwarf_hasattr.Po
	-rm -f ./$(DEPDIR)/dwarf_hasattr_integrate.Po
	-rm -f ./$(DEPDIR)/dwarf_haschildren.Po
	-rm -f ./$(DEPDIR)/dwarf_hasform.Po
	-rm -f ./$(DEPDIR)/dwarf_haspc.Po
	-rm -f ./$(DEPDIR)/dwarf_highpc.Po
	-rm -f ./$(DEPDIR)/dwarf_line_file.Po
	-rm -f ./$(DEPDIR)/dwarf_lineaddr.Po
	-rm -f ./$(DEPDIR)/dwarf_linebeginstatement.Po
	-rm -f ./$(DEPDIR)/dwarf_lineblock.Po
	-rm -f ./$(DEPDIR)/dwarf_linecol.Po
	-rm -f ./$(DEPDIR)/dwarf_linecontext.Po
	-rm -f ./$(DEPDIR)/dwarf_linediscriminator.Po
	-rm -f ./$(DEPDIR)/dwarf_lineendsequence.Po
	-rm -f ./$(DEPDIR)/dwarf_lineepiloguebegin.Po
	-rm -f ./$(DEPDIR)/dwarf_linefunctionname.Po
	-rm -f ./$(DEPDIR)/dwarf_lineisa.Po
	-rm -f ./$(DEPDIR)/dwarf_lineno.Po
	-rm -f ./$(DEPDIR)/dwarf_lineop_index.Po
	-rm -f ./$(DEPDIR)/dwarf_lineprologueend.Po
	-rm -f ./$(DEPDIR)/dwarf_linesrc.Po
	-rm -f ./$(DEPDIR)/dwarf_lowpc.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_getparamcnt.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_getsrcfiles.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_opcode.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param1.Po
	-rm -f ./$(DEPDIR)/dwarf_macro_param2.Po
	-rm -f ./$(DEPDIR)/dwarf_next_cfi.Po
	-rm -f ./$(DEPDIR)/dwarf_next_lines.Po
	-rm -f ./$(DEPDIR)/dwarf_nextcu.Po
	-rm -f ./$(DEPDIR)/dwarf_offabbrev.Po
	-rm -f ./$(DEPDIR)/dwarf_offdie.Po
	-rm -f ./$(DEPDIR)/dwarf_onearange.Po
	-rm -f ./$(DEPDIR)/dwarf_onesrcline.Po
	-rm -f ./$(DEPDIR)/dwarf_peel_type.Po
	-rm -f ./$(DEPDIR)/dwarf_ranges.Po
	-rm -f ./$(DEPDIR)/dwarf_setalt.Po
	-rm -f ./$(DEPDIR)/dwarf_siblingof.Po
	-rm -f ./$(DEPDIR)/dwarf_sig8_hash.Po
	-rm -f ./$(DEPDIR)/dwarf_srclang.Po
	-rm -f ./$(DEPDIR)/dwarf_srclang_check.Po
	-rm -f ./$(DEPDIR)/dwarf_tag.Po
	-rm -f ./$(DEPDIR)/dwarf_whatattr.Po
	-rm -f ./$(DEPDIR)/dwarf_whatform.Po
	-rm -f ./$(DEPDIR)/fde.Po
	-rm -f ./$(DEPDIR)/frame-cache.Po
	-rm -f ./$(DEPDIR)/libdw_alloc.Po
	-rm -f ./$(DEPDIR)/libdw_find_split_unit.Po
	-rm -f ./$(DEPDIR)/libdw_findcu.Po
	-rm -f ./$(DEPDIR)/libdw_form.Po
	-rm -f ./$(DEPDIR)/libdw_visit_scopes.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

.MAKE: all check check-am install install-am install-exec \
	install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES clean-local clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile


%.os: %.c %.o
@AMDEP_TRUE@	$(AM_V_CC)if $(COMPILE.os) -c -o $@ $(fpic_CFLAGS) $(DEFS.os) -MT $@ -MD -MP \
@AMDEP_TRUE@	  -MF "$(DEPDIR)/$*.Tpo" `test -f '$<' || echo '$(srcdir)/'`$<; \
@AMDEP_TRUE@	then cat "$(DEPDIR)/$*.Tpo" >> "$(DEPDIR)/$*.Po"; \
@AMDEP_TRUE@	     rm -f "$(DEPDIR)/$*.Tpo"; \
@AMDEP_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@AMDEP_TRUE@	fi
@AMDEP_FALSE@	$(AM_V_CC)$(COMPILE.os) -c -o $@ $(fpic_CFLAGS) $(DEFS.os) $<

.PHONY: clean-coverage coverage

clean-local: clean-coverage
clean-coverage:
	-rm -rf $(COVERAGE_OUTPUT_DIRECTORY)
	-rm -f $(COVERAGE_OUTPUT_FILE) *.gcno *.gcda

print-%:
	@echo $*=$($*)
@MAINTAINER_MODE_TRUE@$(srcdir)/known-dwarf.h: $(top_srcdir)/config/known-dwarf.awk $(srcdir)/dwarf.h
@MAINTAINER_MODE_TRUE@	gawk -f $^ > $@.new
@MAINTAINER_MODE_TRUE@	mv -f $@.new $@
libdw.so: $(srcdir)/libdw.map $(libdw_so_LIBS) $(libdw_so_DEPS)
	$(AM_V_CCLD)$(LINK) $(dso_LDFLAGS) -o $@ \
		-Wl,--soname,$@.$(VERSION),--enable-new-dtags \
		-Wl,--version-script,$< \
		$(NO_UNDEFINED) \
		-Wl,--whole-archive $(libdw_so_LIBS) -Wl,--no-whole-archive \
		$(libdw_so_LDLIBS)
	@$(textrel_check)
	$(AM_V_at)ln -fs $@ $@.$(VERSION)

install: install-am libdw.so
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	$(INSTALL_PROGRAM) libdw.so $(DESTDIR)$(libdir)/libdw-$(PACKAGE_VERSION).so
	ln -fs libdw-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libdw.so.$(VERSION)
	ln -fs libdw.so.$(VERSION) $(DESTDIR)$(libdir)/libdw.so

uninstall: uninstall-am
	rm -f $(DESTDIR)$(libdir)/libdw-$(PACKAGE_VERSION).so
	rm -f $(DESTDIR)$(libdir)/libdw.so.$(VERSION)
	rm -f $(DESTDIR)$(libdir)/libdw.so
	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(includedir)/elfutils

libdw.manifest: $(libdw_a_OBJECTS)
	$(AM_V_GEN)echo $^ > $@

.SECONDEXPANSION:
dwarf_srclang_check$(EXEEXT): $$(filter-out $$(subst _check,,$$@).o,$(libdw_a_OBJECTS)) $$(subst _check,,$$@).c
	$(AM_V_CC)$(CC) $(CHECK_DEF_FLAGS) -o $@ $^ $(filter-out libdw_pic.a,$(libdw_so_LIBS)) $(libdw_so_LDLIBS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

# Tell GNU make to disable its built-in pattern rules.
%:: %,v
%:: RCS/%,v
%:: RCS/%
%:: s.%
%:: SCCS/s.%
